{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport axios from \"axios\";\nfunction useFlip() {\n  _s();\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  const flipCard = () => setIsFacingUp(isUp => !isUp);\n  return [isFacingUp, flipCard];\n}\n_s(useFlip, \"MAa1uxaU8Uj1WEqjPNN6CqCOgcw=\");\nfunction useAxios(url) {\n  _s2();\n  const [oldData, setData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(url);\n        const response = await axios.get(url);\n        const newData = response.data;\n        setData(prevData => [...prevData, {\n          ...newData,\n          id: uuid()\n        }]);\n        console.log(data);\n      } catch (error) {\n        console.error('Error fetching data: ', error);\n      }\n    };\n    fetchData();\n    return () => {};\n  }, [url, setData]);\n  const addData = newData => setData(prevData => [...prevData, {\n    ...newData,\n    id: uuid()\n  }]);\n  return [data, addData];\n}\n_s2(useAxios, \"xbdEyIXH1EBk7Bby74NdKy+78LM=\");\nconst usePokemonList = () => {\n  _s3();\n  const [pokemonList, setPokemonList] = useState([]);\n  const fetchAndCopyPokemonNames = async () => {\n    try {\n      const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=1025');\n      const pokemonData = response.data.results;\n      const names = pokemonData.map(pokemon => pokemon.name).sort();\n      setPokemonList(names);\n    } catch (error) {\n      console.error('Error fetching Pokemon data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAndCopyPokemonNames();\n  }, []);\n  return pokemonList;\n};\n_s3(usePokemonList, \"8WCeILIBbUks4eWUNugK57Uz8MA=\");\nexport { useFlip, useAxios, usePokemonList };","map":{"version":3,"names":["useState","useEffect","v4","uuid","axios","useFlip","_s","isFacingUp","setIsFacingUp","flipCard","isUp","useAxios","url","_s2","oldData","setData","fetchData","console","log","response","get","newData","data","prevData","id","error","addData","usePokemonList","_s3","pokemonList","setPokemonList","fetchAndCopyPokemonNames","pokemonData","results","names","map","pokemon","name","sort"],"sources":["/home/corey/Springboard/React/cards-pokemon/src/Hooks.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport {v4 as uuid} from \"uuid\";\nimport axios from \"axios\";\n\nfunction useFlip() {\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  const flipCard = () => setIsFacingUp(isUp => !isUp);\n  return [isFacingUp, flipCard];\n}\n\nfunction useAxios(url) {\n  const [oldData, setData] = useState([]);\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        console.log(url)\n        const response = await axios.get(url);\n        const newData = response.data;\n        setData(prevData => [...prevData, {...newData, id: uuid() }]);\n        console.log(data)\n      } catch (error) {\n        console.error('Error fetching data: ', error);\n      }\n    };\n    fetchData();\n\n    return () => {};\n\n  }, [url, setData]);\n\n  const addData = (newData) => setData(prevData => [...prevData, {...newData, id: uuid() }]);\n\n  return [data, addData];\n}\n\nconst usePokemonList = () => {\n  const [pokemonList, setPokemonList] = useState([]);\n\n  const fetchAndCopyPokemonNames = async () => {\n    try {\n      const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=1025');\n      const pokemonData = response.data.results;\n      const names = pokemonData.map(pokemon => pokemon.name).sort();\n      setPokemonList(names);\n    } catch (error) {\n      console.error('Error fetching Pokemon data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAndCopyPokemonNames();\n  }, []);\n\n  return pokemonList;\n};\n\nexport { useFlip, useAxios, usePokemonList};"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAAQC,EAAE,IAAIC,IAAI,QAAO,MAAM;AAC/B,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMS,QAAQ,GAAGA,CAAA,KAAMD,aAAa,CAACE,IAAI,IAAI,CAACA,IAAI,CAAC;EACnD,OAAO,CAACH,UAAU,EAAEE,QAAQ,CAAC;AAC/B;AAACH,EAAA,CAJQD,OAAO;AAMhB,SAASM,QAAQA,CAACC,GAAG,EAAE;EAAAC,GAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAEvCC,SAAS,CAAC,MAAM;IACd,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACFC,OAAO,CAACC,GAAG,CAACN,GAAG,CAAC;QAChB,MAAMO,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAACR,GAAG,CAAC;QACrC,MAAMS,OAAO,GAAGF,QAAQ,CAACG,IAAI;QAC7BP,OAAO,CAACQ,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE;UAAC,GAAGF,OAAO;UAAEG,EAAE,EAAErB,IAAI,CAAC;QAAE,CAAC,CAAC,CAAC;QAC7Dc,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;MACnB,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdR,OAAO,CAACQ,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDT,SAAS,CAAC,CAAC;IAEX,OAAO,MAAM,CAAC,CAAC;EAEjB,CAAC,EAAE,CAACJ,GAAG,EAAEG,OAAO,CAAC,CAAC;EAElB,MAAMW,OAAO,GAAIL,OAAO,IAAKN,OAAO,CAACQ,QAAQ,IAAI,CAAC,GAAGA,QAAQ,EAAE;IAAC,GAAGF,OAAO;IAAEG,EAAE,EAAErB,IAAI,CAAC;EAAE,CAAC,CAAC,CAAC;EAE1F,OAAO,CAACmB,IAAI,EAAEI,OAAO,CAAC;AACxB;AAACb,GAAA,CAxBQF,QAAQ;AA0BjB,MAAMgB,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAM+B,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IAC3C,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMf,KAAK,CAACgB,GAAG,CAAC,8CAA8C,CAAC;MAChF,MAAMY,WAAW,GAAGb,QAAQ,CAACG,IAAI,CAACW,OAAO;MACzC,MAAMC,KAAK,GAAGF,WAAW,CAACG,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC,CAACC,IAAI,CAAC,CAAC;MAC7DR,cAAc,CAACI,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdR,OAAO,CAACQ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAEDxB,SAAS,CAAC,MAAM;IACd8B,wBAAwB,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,WAAW;AACpB,CAAC;AAACD,GAAA,CAnBID,cAAc;AAqBpB,SAAStB,OAAO,EAAEM,QAAQ,EAAEgB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}
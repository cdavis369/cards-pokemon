{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nfunction useFlip() {\n  _s();\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  const flipCard = () => setIsFacingUp(isUp => !isUp);\n  return [isFacingUp, flipCard];\n}\n\n// function useAxios() {\n\n// }\n_s(useFlip, \"MAa1uxaU8Uj1WEqjPNN6CqCOgcw=\");\nconst usePokemonList = () => {\n  _s2();\n  const [pokemonList, setPokemonList] = useState([]);\n  const fetchAndCopyPokemonNames = async () => {\n    try {\n      const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=1025');\n      const pokemonData = response.data.results;\n      const names = pokemonData.map(pokemon => pokemon.name);\n      setPokemonList(names);\n    } catch (error) {\n      console.error('Error fetching Pokemon data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAndCopyPokemonNames();\n  }, []);\n  return pokemonList;\n};\n_s2(usePokemonList, \"8WCeILIBbUks4eWUNugK57Uz8MA=\");\nexport { useFlip, /**useAxios , */usePokemonList };","map":{"version":3,"names":["useState","useEffect","axios","useFlip","_s","isFacingUp","setIsFacingUp","flipCard","isUp","usePokemonList","_s2","pokemonList","setPokemonList","fetchAndCopyPokemonNames","response","get","pokemonData","data","results","names","map","pokemon","name","error","console"],"sources":["/home/corey/Springboard/React/cards-pokemon/src/Hooks.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nfunction useFlip() {\n  const [isFacingUp, setIsFacingUp] = useState(true);\n  const flipCard = () => setIsFacingUp(isUp => !isUp);\n  return [isFacingUp, flipCard];\n}\n\n// function useAxios() {\n\n// }\n\nconst usePokemonList = () => {\n  const [pokemonList, setPokemonList] = useState([]);\n\n  const fetchAndCopyPokemonNames = async () => {\n    try {\n      const response = await axios.get('https://pokeapi.co/api/v2/pokemon?limit=1025');\n      const pokemonData = response.data.results;\n\n      const names = pokemonData.map(pokemon => pokemon.name);\n      setPokemonList(names);\n    } catch (error) {\n      console.error('Error fetching Pokemon data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchAndCopyPokemonNames();\n  }, []);\n\n  return pokemonList;\n};\n\nexport { useFlip, /**useAxios , */ usePokemonList};"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAMO,QAAQ,GAAGA,CAAA,KAAMD,aAAa,CAACE,IAAI,IAAI,CAACA,IAAI,CAAC;EACnD,OAAO,CAACH,UAAU,EAAEE,QAAQ,CAAC;AAC/B;;AAEA;;AAEA;AAAAH,EAAA,CARSD,OAAO;AAUhB,MAAMM,cAAc,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMa,wBAAwB,GAAG,MAAAA,CAAA,KAAY;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,8CAA8C,CAAC;MAChF,MAAMC,WAAW,GAAGF,QAAQ,CAACG,IAAI,CAACC,OAAO;MAEzC,MAAMC,KAAK,GAAGH,WAAW,CAACI,GAAG,CAACC,OAAO,IAAIA,OAAO,CAACC,IAAI,CAAC;MACtDV,cAAc,CAACO,KAAK,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD;EACF,CAAC;EAEDtB,SAAS,CAAC,MAAM;IACdY,wBAAwB,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,OAAOF,WAAW;AACpB,CAAC;AAACD,GAAA,CApBID,cAAc;AAsBpB,SAASN,OAAO,EAAE,gBAAiBM,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}